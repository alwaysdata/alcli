[tool.poetry]
name = "alcli"
version = "0.0.0"
description = ""
authors = ["m4dz <code@m4dz.net>"]
readme = "README.md"
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = "^3.10"
typer = "^0.7.0"
shellingham = "^1.5.0.post1"
requests = "^2.28.2"
tabulate = "^0.9.0"
chardet = "^5.1.0"
platformdirs = "^3.0.0"
rich = "^13.5.3"

[tool.poetry.group.build.dependencies]
nuitka = "^1.4"
zstandard = "^0.19.0"
ordered-set = "^4.1.0"

[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
isort = "^5.11.4"
gitlint = "^0.18.0"
poethepoet = "^0.22.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.2.1"


[tool.poetry.scripts]
alwaysdata = "src.__main__:main"


[tool.poe]
poetry_command = "alcli"

[tool.poe.tasks.format]
help = "Format code/tests"
sequence = ["isort", "black"]

[tool.poe.tasks.black]
help = "Run black on the code base"
cmd = "black --line-length 119 src tests"

[tool.poe.tasks.isort]
help = "Run black on the code base"
cmd = "isort --line-length 119 src tests"

[tool.poe.tasks.test]
help = "Run unit and feature tests"
sequence = ["pytest"]

[tool.poe.tasks.pytest]
help = "Run unit tests"
cmd = "pytest"

[tool.poe.tasks.build]
help = "Build a local version (testing delivery purposes)"
cmd = """
python -m nuitka
  --company-name=alwaysdata --product-name=alcli --product-version=0.1.0
  --standalone
  --onefile
  --onefile-tempdir-spec='%CACHE_DIR%/%COMPANY%/%PRODUCT%/%VERSION%'
  --python-flag=-m
  --static-libpython=no
  --follow-import-to=src
  --assume-yes-for-downloads
  --enable-plugin=no-qt
  --clang
  --noinclude-default-mode=nofollow
  --show-anti-bloat-changes
  --report=nuitka-build.xml
  --output-dir=tmp
  --output-filename=alwaysdata
  src
"""


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
